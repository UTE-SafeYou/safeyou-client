{
  "backgroundColor": "#fce7f3",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 652,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ]\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "fllrvb2m9f",
  "leftColumn": 2,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 43,
  "mobileLeftColumn": 3,
  "mobileRightColumn": 26,
  "mobileTopRow": 13,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "parentColumnSpace": 17.9375,
  "parentId": "pwdemzedfm",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 63,
  "shouldScrollContents": true,
  "srcDoc": {
    "css": ".app {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n}\n\n.tip-container {\n  margin-bottom: 20px;\n}\n\n.tip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n}\n\n.rss-feed {\n  margin-top: 20px;\n}\n\n.rss-item {\n  border-bottom: 1px solid #eee;\n  padding: 20px 0;\n}\n\n.rss-item img {\n  max-width: 200px;\n  height: auto;\n  margin: 10px 0;\n}\n\n.rss-item a {\n  text-decoration: none;\n  color: #1890ff;\n}\n\n.rss-item a:hover {\n  text-decoration: underline;\n}\n\n.rss-item h3 {\n  margin: 0 0 10px 0;\n}\n\n.rss-item small {\n  color: #666;\n  display: block;\n  margin-top: 10px;\n}\n\n.error {\n  color: red;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid red;\n  border-radius: 4px;\n}\n\n.ant-list-item {\n  padding: 12px 0 !important;\n}\n\n.ant-card-inner {\n  margin-bottom: 16px;\n}\n\n.ant-card-inner:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.ant-card-inner img {\n  max-width: 100%;\n  height: auto;\n  margin: 12px 0;\n  border-radius: 4px;\n}\n\n.ant-typography a {\n  color: #1890ff;\n}\n\n.ant-typography a:hover {\n  color: #40a9ff;\n}\n\n.error .ant-typography {\n  margin: 0;\n}",
    "html": "<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"></div>\n",
    "js": "import { Card, Image, List, Select, Skeleton, Space, Tag, Typography } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport React from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nfunction App() {\n  const [rssItems, setRssItems] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  const [category, setCategory] = React.useState('phong-chong-thien-tai');\n  const categories = {\n    'phong-chong-thien-tai': 'Phòng chống thiên tai',\n    'khi-hau': 'Khí hậu',\n    'moi-truong': 'Môi trường'\n  };\n  React.useEffect(() => {\n    setLoading(true);\n    const proxyUrl = 'https://api.allorigins.win/get?url=';\n    const rssUrl = encodeURIComponent(`https://kinhtemoitruong.vn/rss/moi-truong-xanh/${category}.rss`);\n    fetch(`${proxyUrl}${rssUrl}`).then(response => response.json()).then(data => {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(data.contents, \"text/xml\");\n      const items = Array.from(xmlDoc.querySelectorAll(\"item\")).map(item => {\n        const description = item.querySelector(\"description\")?.textContent || '';\n        const imgMatch = description.match(/<img src=\"([^\"]+)\"/);\n        const descText = description.replace(/<[^>]+>/g, '').trim();\n\n        // Convert image URL to high resolution version\n        const imageUrl = imgMatch ? imgMatch[1].replace('thumb_x200x', 'thumb_x550x') : null;\n        return {\n          title: item.querySelector(\"title\")?.textContent.replace(/<!\\[CDATA\\[|\\]\\]>/g, '').trim() || '',\n          link: item.querySelector(\"link\")?.textContent || '',\n          description: descText,\n          image: imageUrl,\n          pubDate: item.querySelector(\"pubDate\")?.textContent || ''\n        };\n      });\n      setRssItems(items);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to load RSS feed');\n      setLoading(false);\n    });\n  }, [category]);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"app\"\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 2\n  }, /*#__PURE__*/React.createElement(Space, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://ktmt.vnmediacdn.com/static/images/share-logo.jpg\",\n    alt: \"Logo\",\n    style: {\n      height: 40,\n      marginRight: 10\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    value: category,\n    onChange: setCategory,\n    style: {\n      width: 200\n    },\n    options: Object.entries(categories).map(([key, label]) => ({\n      value: key,\n      label: label\n    }))\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"green\"\n  }, \"Kinh t\\u1EBF M\\xF4i tr\\u01B0\\u1EDDng\"))), /*#__PURE__*/React.createElement(Skeleton, {\n    loading: loading,\n    active: true,\n    paragraph: {\n      rows: 4\n    }\n  }, error ? /*#__PURE__*/React.createElement(Card, {\n    type: \"inner\",\n    className: \"error\"\n  }, /*#__PURE__*/React.createElement(Typography.Text, {\n    type: \"danger\"\n  }, error)) : /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"vertical\",\n    size: \"large\",\n    dataSource: rssItems,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, null, /*#__PURE__*/React.createElement(Card, {\n      type: \"inner\",\n      hoverable: true\n    }, /*#__PURE__*/React.createElement(Space, {\n      direction: \"vertical\",\n      size: \"large\",\n      style: {\n        width: '100%'\n      }\n    }, item.image && /*#__PURE__*/React.createElement(Image, {\n      src: item.image,\n      alt: item.title,\n      style: {\n        maxWidth: '100%',\n        borderRadius: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Typography.Title, {\n      level: 4\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: item.link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, item.title)), /*#__PURE__*/React.createElement(Typography.Paragraph, null, item.description), /*#__PURE__*/React.createElement(Typography.Text, {\n      type: \"secondary\"\n    }, new Date(item.pubDate).toLocaleString('vi-VN'))))))\n  }))));\n}\nappsmith.onReady(() => {\n  reactDom.render( /*#__PURE__*/React.createElement(App, null), document.getElementById(\"root\"));\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 37,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": ".app {\n\tmax-width: 800px;\n\tmargin: 20px auto;\n\tpadding: 20px;\n}\n\n.tip-container {\n\tmargin-bottom: 20px;\n}\n\n.tip-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\n.button-container {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.rss-feed {\n\tmargin-top: 20px;\n}\n\n.rss-item {\n\tborder-bottom: 1px solid #eee;\n\tpadding: 20px 0;\n}\n\n.rss-item img {\n\tmax-width: 200px;\n\theight: auto;\n\tmargin: 10px 0;\n}\n\n.rss-item a {\n\ttext-decoration: none;\n\tcolor: #1890ff;\n}\n\n.rss-item a:hover {\n\ttext-decoration: underline;\n}\n\n.rss-item h3 {\n\tmargin: 0 0 10px 0;\n}\n\n.rss-item small {\n\tcolor: #666;\n\tdisplay: block;\n\tmargin-top: 10px;\n}\n\n.error {\n\tcolor: red;\n\tpadding: 10px;\n\tmargin: 10px 0;\n\tborder: 1px solid red;\n\tborder-radius: 4px;\n}\n\n.ant-list-item {\n\tpadding: 12px 0 !important;\n}\n\n.ant-card-inner {\n\tmargin-bottom: 16px;\n}\n\n.ant-card-inner:hover {\n\tbox-shadow: 0 4px 12px rgba(0,0,0,0.1);\n}\n\n.ant-card-inner img {\n\tmax-width: 100%;\n\theight: auto;\n\tmargin: 12px 0;\n\tborder-radius: 4px;\n}\n\n.ant-typography a {\n\tcolor: #1890ff;\n}\n\n.ant-typography a:hover {\n\tcolor: #40a9ff;\n}\n\n.error .ant-typography {\n\tmargin: 0;\n}\n",
    "html": "<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"></div>\n",
    "js": "import { Card, Image, List, Select, Skeleton, Space, Tag, Typography } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport React from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\n\nfunction App() {\n\tconst [rssItems, setRssItems] = React.useState([]);\n\tconst [loading, setLoading] = React.useState(true);\n\tconst [error, setError] = React.useState(null);\n\tconst [category, setCategory] = React.useState('phong-chong-thien-tai');\n\n\tconst categories = {\n\t\t'phong-chong-thien-tai': 'Phòng chống thiên tai',\n\t\t'khi-hau': 'Khí hậu',\n\t\t'moi-truong': 'Môi trường',\n\t};\n\n\tReact.useEffect(() => {\n\t\tsetLoading(true);\n\t\tconst proxyUrl = 'https://api.allorigins.win/get?url=';\n\t\tconst rssUrl = encodeURIComponent(`https://kinhtemoitruong.vn/rss/moi-truong-xanh/${category}.rss`);\n\n\t\tfetch(`${proxyUrl}${rssUrl}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\tconst parser = new DOMParser();\n\t\t\tconst xmlDoc = parser.parseFromString(data.contents, \"text/xml\");\n\t\t\tconst items = Array.from(xmlDoc.querySelectorAll(\"item\")).map(item => {\n\t\t\t\tconst description = item.querySelector(\"description\")?.textContent || '';\n\t\t\t\tconst imgMatch = description.match(/<img src=\"([^\"]+)\"/);\n\t\t\t\tconst descText = description.replace(/<[^>]+>/g, '').trim();\n\n\t\t\t\t// Convert image URL to high resolution version\n\t\t\t\tconst imageUrl = imgMatch ? imgMatch[1].replace('thumb_x200x', 'thumb_x550x') : null;\n\n\t\t\t\treturn {\n\t\t\t\t\ttitle: item.querySelector(\"title\")?.textContent.replace(/<!\\[CDATA\\[|\\]\\]>/g, '').trim() || '',\n\t\t\t\t\tlink: item.querySelector(\"link\")?.textContent || '',\n\t\t\t\t\tdescription: descText,\n\t\t\t\t\timage: imageUrl,\n\t\t\t\t\tpubDate: item.querySelector(\"pubDate\")?.textContent || '',\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetRssItems(items);\n\t\t\tsetLoading(false);\n\t\t})\n\t\t\t.catch(err => {\n\t\t\tsetError('Failed to load RSS feed');\n\t\t\tsetLoading(false);\n\t\t});\n\t}, [category]);\n\n\treturn (\n\t\t<Card className=\"app\">\n\t\t<Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n\t\t<Typography.Title level={2}>\n\t\t\t<Space>\n\t\t\t<img \nsrc=\"https://ktmt.vnmediacdn.com/static/images/share-logo.jpg\" \nalt=\"Logo\"\nstyle={{ height: 40, marginRight: 10 }}\n/>\n<Select\nvalue={category}\nonChange={setCategory}\nstyle={{ width: 200 }}\noptions={Object.entries(categories).map(([key, label]) => ({\n\tvalue: key,\n\tlabel: label\n}))}\n/>\n<Tag color=\"green\">Kinh tế Môi trường</Tag>\n</Space>\n</Typography.Title>\n\n<Skeleton loading={loading} active paragraph={{ rows: 4 }}>\n\t{error ? (\n\t <Card type=\"inner\" className=\"error\">\n\t <Typography.Text type=\"danger\">{error}</Typography.Text>\n</Card>\n) : (\n\t<List\n\titemLayout=\"vertical\"\n\tsize=\"large\"\n\tdataSource={rssItems}\nrenderItem={(item) => (\n\t<List.Item>\n\t<Card type=\"inner\" hoverable>\n\t<Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n\t{item.image && (\n\t <Image\n\t src={item.image}\nalt={item.title}\nstyle={{ maxWidth: '100%', borderRadius: 8 }}\n/>\n)}\n\t<div>\n\t\t<Typography.Title level={4}>\n\t\t\t<a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t{item.title}\n</a>\n</Typography.Title>\n<Typography.Paragraph>{item.description}</Typography.Paragraph>\n<Typography.Text type=\"secondary\">\n\t{new Date(item.pubDate).toLocaleString('vi-VN')}\n\t\t</Typography.Text>\n</div>\n</Space>\n</Card>\n</List.Item>\n)}\n/>\n)}\n\t</Skeleton>\n</Space>\n</Card>\n);\n}\n\nappsmith.onReady(() => {\n\treactDom.render(<App />, document.getElementById(\"root\"));\n});"
  },
  "version": 1,
  "widgetId": "0q9dga32yu",
  "widgetName": "Custom1Copy"
}